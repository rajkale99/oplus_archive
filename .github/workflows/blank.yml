# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
name: Dump firmware (full)

on:

  workflow_dispatch:

    inputs:

      ota:

        description: 'OTA'

        required: true

jobs:

  dump:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repo

      uses: actions/checkout@v2

    - name: Setup

      run: |

        sudo apt update

        sudo apt -y install zstd

        curl -L https://github.com/ssut/payload-dumper-go/releases/download/1.2.2/payload-dumper-go_1.2.2_linux_amd64.tar.gz -o - | tar zxf - payload-dumper-go

    - name: Download

      id: download

      run: |

        curl -L ${{ inputs.ota }} -o ota.zip

        echo ::set-output name=ota_ver::`unzip -p ota.zip META-INF/com/android/metadata | grep ^version_name= | cut -b 14-`

    - name: Dump

      run: |

        ./payload-dumper-go -o ota ota.zip > /dev/null

        pushd ota; for f in *; do zstd $f; done; popd

    - name: Upload release assets

      uses: ncipollo/release-action@v1

      with:

        artifacts: ota/*.img.zst

        artifactErrorsFailBuild: true

        body: ${{ inputs.ota }}

        tag: ${{ steps.download.outputs.ota_ver }}

        token: ${{ secrets.GITHUB_TOKEN }}
